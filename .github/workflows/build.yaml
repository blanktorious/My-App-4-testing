name: Build, Push, and Deploy to Existing Slot

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  ACR_NAME: acrtesting4.azurecr.io
  IMAGE_NAME: myapptest4
  RESOURCE_GROUP: 4-testing
  APP_NAME: my-webapp-4-testing
  SLOT_NAME: feature

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tag }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Docker Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Generate Docker tag
        id: meta
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH="${{ github.event.pull_request.head.ref }}"
          else
            BRANCH="${{ github.ref_name }}"
          fi

          SAFE=$(echo "$BRANCH" | tr '[:upper:]' '[:lower:]' | sed 's#[^a-z0-9]#-#g')
          IFS='-' read -r PART1 PART2 PART3 _ <<< "$SAFE"
          TAG="${PART1}-${PART2}-${PART3}-${GITHUB_SHA::7}"

          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t $ACR_NAME/$IMAGE_NAME:${{ steps.meta.outputs.tag }} ./WebApplication1

      - name: Push Docker image
        run: |
          docker push $ACR_NAME/$IMAGE_NAME:${{ steps.meta.outputs.tag }}

  deploy-to-slot:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Deploy image to existing slot
        run: |
          az webapp config container set \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --slot $SLOT_NAME \
            --container-image-name $ACR_NAME/$IMAGE_NAME:${{ needs.build-and-push.outputs.tag }} \
            --container-registry-url https://$ACR_NAME
